spring:
  profiles:
    active: eureka

---
spring:
  application:
    name: fetch-server
  profiles: eureka
  data:
    mongodb:
      uri: mongodb://localhost:27017/test  # mongodb docker name "mongo"
  kafka:
    kafka:
      template:
        default-topic: covid-data
      producer:
        bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
        properties:
          acks: all
          retries: 10
server:
  port: ${PORT:0}

logging:
  level:
    org.springframework: debug

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:9091/eureka
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    fetch-registry: true

management:
  endpoint:
    web:
      exposure:
        include: "*"


  messages:
    basename: messages

open:
  api:
    key:

---
spring:
  profiles:
    active: test
  data:
    mongodb:
      uri: mongodb://localhost:27017/test
  jpa:
    hibernate:
      ddl-auto: update

  kafka:
    kafka:
      template:
        default-topic: covid-data
      producer:
        bootstrap-servers: localhost:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer

        properties:
          acks: all
          retries: 10


server:
  port: 8082

logging:
  level:
    org.springframework: debug

open:
  api:
    key:




